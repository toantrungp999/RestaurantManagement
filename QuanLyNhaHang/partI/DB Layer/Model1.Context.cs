//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace partI.DB_Layer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class QuanLyNhaHangEntities : DbContext
    {
        public QuanLyNhaHangEntities()
            : base("name=QuanLyNhaHangEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Account> Accounts { get; set; }
        public virtual DbSet<Bill> Bills { get; set; }
        public virtual DbSet<Cancelled> Cancelleds { get; set; }
        public virtual DbSet<DetailBill> DetailBills { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<Food> Foods { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Table> Tables { get; set; }
    
        [DbFunction("QuanLyNhaHangEntities", "CheckTopManager")]
        public virtual IQueryable<CheckTopManager_Result> CheckTopManager(Nullable<int> idTopManager)
        {
            var idTopManagerParameter = idTopManager.HasValue ?
                new ObjectParameter("idTopManager", idTopManager) :
                new ObjectParameter("idTopManager", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CheckTopManager_Result>("[QuanLyNhaHangEntities].[CheckTopManager](@idTopManager)", idTopManagerParameter);
        }
    
        [DbFunction("QuanLyNhaHangEntities", "DayRevenueReport")]
        public virtual IQueryable<DayRevenueReport_Result> DayRevenueReport(Nullable<System.DateTime> start, Nullable<System.DateTime> end, string status)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DayRevenueReport_Result>("[QuanLyNhaHangEntities].[DayRevenueReport](@start, @end, @status)", startParameter, endParameter, statusParameter);
        }
    
        [DbFunction("QuanLyNhaHangEntities", "GetAccount")]
        public virtual IQueryable<GetAccount_Result> GetAccount(Nullable<int> iD_Employee)
        {
            var iD_EmployeeParameter = iD_Employee.HasValue ?
                new ObjectParameter("ID_Employee", iD_Employee) :
                new ObjectParameter("ID_Employee", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetAccount_Result>("[QuanLyNhaHangEntities].[GetAccount](@ID_Employee)", iD_EmployeeParameter);
        }
    
        [DbFunction("QuanLyNhaHangEntities", "GetBill")]
        public virtual IQueryable<GetBill_Result> GetBill()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetBill_Result>("[QuanLyNhaHangEntities].[GetBill]()");
        }
    
        [DbFunction("QuanLyNhaHangEntities", "GetBillOnTable")]
        public virtual IQueryable<GetBillOnTable_Result> GetBillOnTable(Nullable<int> location)
        {
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetBillOnTable_Result>("[QuanLyNhaHangEntities].[GetBillOnTable](@Location)", locationParameter);
        }
    
        [DbFunction("QuanLyNhaHangEntities", "GetBillReport")]
        public virtual IQueryable<GetBillReport_Result> GetBillReport(Nullable<System.DateTime> start, Nullable<System.DateTime> end, string status)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetBillReport_Result>("[QuanLyNhaHangEntities].[GetBillReport](@start, @end, @status)", startParameter, endParameter, statusParameter);
        }
    
        [DbFunction("QuanLyNhaHangEntities", "getCancelled")]
        public virtual IQueryable<getCancelled_Result> getCancelled()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<getCancelled_Result>("[QuanLyNhaHangEntities].[getCancelled]()");
        }
    
        [DbFunction("QuanLyNhaHangEntities", "GetCancelledReport")]
        public virtual IQueryable<GetCancelledReport_Result> GetCancelledReport(Nullable<System.DateTime> start, Nullable<System.DateTime> end, string status)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetCancelledReport_Result>("[QuanLyNhaHangEntities].[GetCancelledReport](@start, @end, @status)", startParameter, endParameter, statusParameter);
        }
    
        [DbFunction("QuanLyNhaHangEntities", "GetDetailBill")]
        public virtual IQueryable<GetDetailBill_Result> GetDetailBill(Nullable<int> iD_Bill)
        {
            var iD_BillParameter = iD_Bill.HasValue ?
                new ObjectParameter("ID_Bill", iD_Bill) :
                new ObjectParameter("ID_Bill", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetDetailBill_Result>("[QuanLyNhaHangEntities].[GetDetailBill](@ID_Bill)", iD_BillParameter);
        }
    
        [DbFunction("QuanLyNhaHangEntities", "GetDetailBillReport")]
        public virtual IQueryable<GetDetailBillReport_Result> GetDetailBillReport(Nullable<int> id_bill)
        {
            var id_billParameter = id_bill.HasValue ?
                new ObjectParameter("id_bill", id_bill) :
                new ObjectParameter("id_bill", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetDetailBillReport_Result>("[QuanLyNhaHangEntities].[GetDetailBillReport](@id_bill)", id_billParameter);
        }
    
        [DbFunction("QuanLyNhaHangEntities", "GetEmployee")]
        public virtual IQueryable<GetEmployee_Result> GetEmployee(string active)
        {
            var activeParameter = active != null ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetEmployee_Result>("[QuanLyNhaHangEntities].[GetEmployee](@active)", activeParameter);
        }
    
        [DbFunction("QuanLyNhaHangEntities", "GetFood")]
        public virtual IQueryable<GetFood_Result> GetFood(string status, string active, string type)
        {
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var activeParameter = active != null ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetFood_Result>("[QuanLyNhaHangEntities].[GetFood](@status, @active, @type)", statusParameter, activeParameter, typeParameter);
        }
    
        [DbFunction("QuanLyNhaHangEntities", "GetFoodOnDetailBill")]
        public virtual IQueryable<GetFoodOnDetailBill_Result> GetFoodOnDetailBill(Nullable<int> iD_Bill, Nullable<int> iD_Food)
        {
            var iD_BillParameter = iD_Bill.HasValue ?
                new ObjectParameter("ID_Bill", iD_Bill) :
                new ObjectParameter("ID_Bill", typeof(int));
    
            var iD_FoodParameter = iD_Food.HasValue ?
                new ObjectParameter("ID_Food", iD_Food) :
                new ObjectParameter("ID_Food", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetFoodOnDetailBill_Result>("[QuanLyNhaHangEntities].[GetFoodOnDetailBill](@ID_Bill, @ID_Food)", iD_BillParameter, iD_FoodParameter);
        }
    
        [DbFunction("QuanLyNhaHangEntities", "GetID_Bill")]
        public virtual IQueryable<GetID_Bill_Result> GetID_Bill(Nullable<int> location)
        {
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetID_Bill_Result>("[QuanLyNhaHangEntities].[GetID_Bill](@Location)", locationParameter);
        }
    
        [DbFunction("QuanLyNhaHangEntities", "GetID_Employee")]
        public virtual IQueryable<GetID_Employee_Result> GetID_Employee()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetID_Employee_Result>("[QuanLyNhaHangEntities].[GetID_Employee]()");
        }
    
        [DbFunction("QuanLyNhaHangEntities", "GetTable")]
        public virtual IQueryable<GetTable_Result> GetTable()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetTable_Result>("[QuanLyNhaHangEntities].[GetTable]()");
        }
    
        [DbFunction("QuanLyNhaHangEntities", "LoadAccount")]
        public virtual IQueryable<LoadAccount_Result> LoadAccount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<LoadAccount_Result>("[QuanLyNhaHangEntities].[LoadAccount]()");
        }
    
        [DbFunction("QuanLyNhaHangEntities", "LoginCheck")]
        public virtual IQueryable<LoginCheck_Result> LoginCheck(string user, string pass)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<LoginCheck_Result>("[QuanLyNhaHangEntities].[LoginCheck](@user, @pass)", userParameter, passParameter);
        }
    
        [DbFunction("QuanLyNhaHangEntities", "MonthRevenueReport")]
        public virtual IQueryable<MonthRevenueReport_Result> MonthRevenueReport(Nullable<System.DateTime> start, Nullable<System.DateTime> end, string status)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<MonthRevenueReport_Result>("[QuanLyNhaHangEntities].[MonthRevenueReport](@start, @end, @status)", startParameter, endParameter, statusParameter);
        }
    
        [DbFunction("QuanLyNhaHangEntities", "TurnoverReport")]
        public virtual IQueryable<TurnoverReport_Result> TurnoverReport(Nullable<System.DateTime> start, Nullable<System.DateTime> end, string status, string type)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<TurnoverReport_Result>("[QuanLyNhaHangEntities].[TurnoverReport](@start, @end, @status, @type)", startParameter, endParameter, statusParameter, typeParameter);
        }
    
        public virtual int ProcDeleteAccount(Nullable<int> iD_Employee)
        {
            var iD_EmployeeParameter = iD_Employee.HasValue ?
                new ObjectParameter("ID_Employee", iD_Employee) :
                new ObjectParameter("ID_Employee", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcDeleteAccount", iD_EmployeeParameter);
        }
    
        public virtual int ProcDeleteAllDetailBill(Nullable<int> iD_Bill)
        {
            var iD_BillParameter = iD_Bill.HasValue ?
                new ObjectParameter("ID_Bill", iD_Bill) :
                new ObjectParameter("ID_Bill", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcDeleteAllDetailBill", iD_BillParameter);
        }
    
        public virtual int ProcDeleteDetailBill(Nullable<int> iD_Bill, Nullable<int> iD_Food)
        {
            var iD_BillParameter = iD_Bill.HasValue ?
                new ObjectParameter("ID_Bill", iD_Bill) :
                new ObjectParameter("ID_Bill", typeof(int));
    
            var iD_FoodParameter = iD_Food.HasValue ?
                new ObjectParameter("ID_Food", iD_Food) :
                new ObjectParameter("ID_Food", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcDeleteDetailBill", iD_BillParameter, iD_FoodParameter);
        }
    
        public virtual int ProcInsertAccount(string user, string pass, Nullable<int> iD_Employee)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            var iD_EmployeeParameter = iD_Employee.HasValue ?
                new ObjectParameter("ID_Employee", iD_Employee) :
                new ObjectParameter("ID_Employee", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcInsertAccount", userParameter, passParameter, iD_EmployeeParameter);
        }
    
        public virtual int ProcInsertBill(Nullable<int> iD_Employee, Nullable<System.DateTime> time, Nullable<int> total, string status, Nullable<int> location)
        {
            var iD_EmployeeParameter = iD_Employee.HasValue ?
                new ObjectParameter("ID_Employee", iD_Employee) :
                new ObjectParameter("ID_Employee", typeof(int));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("Time", time) :
                new ObjectParameter("Time", typeof(System.DateTime));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcInsertBill", iD_EmployeeParameter, timeParameter, totalParameter, statusParameter, locationParameter);
        }
    
        public virtual int ProcInsertCancelled(Nullable<int> iD_Bill, Nullable<int> iD_Food, Nullable<int> iD_Employee, Nullable<int> amount, string reason)
        {
            var iD_BillParameter = iD_Bill.HasValue ?
                new ObjectParameter("ID_Bill", iD_Bill) :
                new ObjectParameter("ID_Bill", typeof(int));
    
            var iD_FoodParameter = iD_Food.HasValue ?
                new ObjectParameter("ID_Food", iD_Food) :
                new ObjectParameter("ID_Food", typeof(int));
    
            var iD_EmployeeParameter = iD_Employee.HasValue ?
                new ObjectParameter("ID_Employee", iD_Employee) :
                new ObjectParameter("ID_Employee", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(int));
    
            var reasonParameter = reason != null ?
                new ObjectParameter("Reason", reason) :
                new ObjectParameter("Reason", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcInsertCancelled", iD_BillParameter, iD_FoodParameter, iD_EmployeeParameter, amountParameter, reasonParameter);
        }
    
        public virtual int ProcInsertDetailBill(Nullable<int> iD_Bill, Nullable<int> iD_Food, Nullable<int> amount, Nullable<int> sale, Nullable<int> price, Nullable<int> iD_Employee)
        {
            var iD_BillParameter = iD_Bill.HasValue ?
                new ObjectParameter("ID_Bill", iD_Bill) :
                new ObjectParameter("ID_Bill", typeof(int));
    
            var iD_FoodParameter = iD_Food.HasValue ?
                new ObjectParameter("ID_Food", iD_Food) :
                new ObjectParameter("ID_Food", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(int));
    
            var saleParameter = sale.HasValue ?
                new ObjectParameter("Sale", sale) :
                new ObjectParameter("Sale", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(int));
    
            var iD_EmployeeParameter = iD_Employee.HasValue ?
                new ObjectParameter("ID_Employee", iD_Employee) :
                new ObjectParameter("ID_Employee", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcInsertDetailBill", iD_BillParameter, iD_FoodParameter, amountParameter, saleParameter, priceParameter, iD_EmployeeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ProcInsertEmployee(string name, string iD_Code, Nullable<System.DateTime> birth, string sex, string service, Nullable<int> salary, Nullable<System.DateTime> day, string active, Nullable<int> phoneNumber, string address)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var iD_CodeParameter = iD_Code != null ?
                new ObjectParameter("ID_Code", iD_Code) :
                new ObjectParameter("ID_Code", typeof(string));
    
            var birthParameter = birth.HasValue ?
                new ObjectParameter("Birth", birth) :
                new ObjectParameter("Birth", typeof(System.DateTime));
    
            var sexParameter = sex != null ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(string));
    
            var serviceParameter = service != null ?
                new ObjectParameter("Service", service) :
                new ObjectParameter("Service", typeof(string));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("Salary", salary) :
                new ObjectParameter("Salary", typeof(int));
    
            var dayParameter = day.HasValue ?
                new ObjectParameter("Day", day) :
                new ObjectParameter("Day", typeof(System.DateTime));
    
            var activeParameter = active != null ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(string));
    
            var phoneNumberParameter = phoneNumber.HasValue ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(int));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ProcInsertEmployee", nameParameter, iD_CodeParameter, birthParameter, sexParameter, serviceParameter, salaryParameter, dayParameter, activeParameter, phoneNumberParameter, addressParameter);
        }
    
        public virtual int ProcInsertFoodAndGetInsertedFood(string name, Nullable<int> price, string status, Nullable<int> sale, string active, string type, ObjectParameter id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var saleParameter = sale.HasValue ?
                new ObjectParameter("sale", sale) :
                new ObjectParameter("sale", typeof(int));
    
            var activeParameter = active != null ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcInsertFoodAndGetInsertedFood", nameParameter, priceParameter, statusParameter, saleParameter, activeParameter, typeParameter, id);
        }
    
        public virtual int ProcUpdateAccount(string user, string pass, Nullable<int> iD_Employee)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            var iD_EmployeeParameter = iD_Employee.HasValue ?
                new ObjectParameter("ID_Employee", iD_Employee) :
                new ObjectParameter("ID_Employee", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcUpdateAccount", userParameter, passParameter, iD_EmployeeParameter);
        }
    
        public virtual int ProcUpdateBill(Nullable<int> iD_Bill, Nullable<int> iD_Employee, Nullable<System.DateTime> time, Nullable<int> total, string status)
        {
            var iD_BillParameter = iD_Bill.HasValue ?
                new ObjectParameter("ID_Bill", iD_Bill) :
                new ObjectParameter("ID_Bill", typeof(int));
    
            var iD_EmployeeParameter = iD_Employee.HasValue ?
                new ObjectParameter("ID_Employee", iD_Employee) :
                new ObjectParameter("ID_Employee", typeof(int));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("Time", time) :
                new ObjectParameter("Time", typeof(System.DateTime));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcUpdateBill", iD_BillParameter, iD_EmployeeParameter, timeParameter, totalParameter, statusParameter);
        }
    
        public virtual int ProcUpdateCancelled(Nullable<int> iD_Bill, Nullable<int> iD_Food, Nullable<int> iD_Employee, Nullable<int> amount, string reason)
        {
            var iD_BillParameter = iD_Bill.HasValue ?
                new ObjectParameter("ID_Bill", iD_Bill) :
                new ObjectParameter("ID_Bill", typeof(int));
    
            var iD_FoodParameter = iD_Food.HasValue ?
                new ObjectParameter("ID_Food", iD_Food) :
                new ObjectParameter("ID_Food", typeof(int));
    
            var iD_EmployeeParameter = iD_Employee.HasValue ?
                new ObjectParameter("ID_Employee", iD_Employee) :
                new ObjectParameter("ID_Employee", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(int));
    
            var reasonParameter = reason != null ?
                new ObjectParameter("Reason", reason) :
                new ObjectParameter("Reason", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcUpdateCancelled", iD_BillParameter, iD_FoodParameter, iD_EmployeeParameter, amountParameter, reasonParameter);
        }
    
        public virtual int ProcUpdateDetailBill(Nullable<int> iD_Bill, Nullable<int> iD_Food, Nullable<int> amount, Nullable<int> sale, Nullable<int> price, Nullable<int> iD_Employee)
        {
            var iD_BillParameter = iD_Bill.HasValue ?
                new ObjectParameter("ID_Bill", iD_Bill) :
                new ObjectParameter("ID_Bill", typeof(int));
    
            var iD_FoodParameter = iD_Food.HasValue ?
                new ObjectParameter("ID_Food", iD_Food) :
                new ObjectParameter("ID_Food", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(int));
    
            var saleParameter = sale.HasValue ?
                new ObjectParameter("Sale", sale) :
                new ObjectParameter("Sale", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(int));
    
            var iD_EmployeeParameter = iD_Employee.HasValue ?
                new ObjectParameter("ID_Employee", iD_Employee) :
                new ObjectParameter("ID_Employee", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcUpdateDetailBill", iD_BillParameter, iD_FoodParameter, amountParameter, saleParameter, priceParameter, iD_EmployeeParameter);
        }
    
        public virtual int ProcUpdateEmployee(Nullable<int> id, string name, string iD_Code, Nullable<System.DateTime> birth, string sex, string service, Nullable<int> salary, Nullable<System.DateTime> day, Nullable<int> phone, string address)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var iD_CodeParameter = iD_Code != null ?
                new ObjectParameter("ID_Code", iD_Code) :
                new ObjectParameter("ID_Code", typeof(string));
    
            var birthParameter = birth.HasValue ?
                new ObjectParameter("birth", birth) :
                new ObjectParameter("birth", typeof(System.DateTime));
    
            var sexParameter = sex != null ?
                new ObjectParameter("sex", sex) :
                new ObjectParameter("sex", typeof(string));
    
            var serviceParameter = service != null ?
                new ObjectParameter("service", service) :
                new ObjectParameter("service", typeof(string));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("salary", salary) :
                new ObjectParameter("salary", typeof(int));
    
            var dayParameter = day.HasValue ?
                new ObjectParameter("day", day) :
                new ObjectParameter("day", typeof(System.DateTime));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(int));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcUpdateEmployee", idParameter, nameParameter, iD_CodeParameter, birthParameter, sexParameter, serviceParameter, salaryParameter, dayParameter, phoneParameter, addressParameter);
        }
    
        public virtual int ProcUpdateFood(Nullable<int> id, string name, Nullable<int> price, string status, Nullable<int> sale, string active, string type)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var saleParameter = sale.HasValue ?
                new ObjectParameter("sale", sale) :
                new ObjectParameter("sale", typeof(int));
    
            var activeParameter = active != null ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcUpdateFood", idParameter, nameParameter, priceParameter, statusParameter, saleParameter, activeParameter, typeParameter);
        }
    
        public virtual int ProcUpdateStatus(Nullable<int> id, string active)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var activeParameter = active != null ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcUpdateStatus", idParameter, activeParameter);
        }
    
        public virtual int ProcUpdateTable(Nullable<int> location, string status)
        {
            var locationParameter = location.HasValue ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcUpdateTable", locationParameter, statusParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
